[package]
name = "rig-core"
version = "0.22.0"
edition = { workspace = true }
description = "An opinionated library for building LLM powered applications."
readme = "README.md"
repository = "https://github.com/0xPlaygrounds/rig"
license = "MIT"

[package.metadata.docs.rs]
all-features = true
rustdoc-args = ["--cfg", "docsrs"]

[lib]
doctest = false
name = "rig"
path = "src/lib.rs"

[[example]]
name = "rag"
required-features = ["derive"]

[[example]]
name = "rag_ollama"
required-features = ["derive"]

[[example]]
name = "vector_search"
required-features = ["derive"]

[[example]]
name = "vector_search_cohere"
required-features = ["derive"]

[[example]]
name = "gemini_embeddings"
required-features = ["derive"]

[[example]]
name = "agent_with_moonshot"

[[example]]
name = "pdf_agent"
required-features = ["derive", "pdf"]

[[example]]
name = "agent_with_together"
required-features = ["derive"]

[[example]]
name = "together_embeddings"
required-features = ["derive"]

[[example]]
name = "openai_audio_generation"
required-features = ["audio"]

[[example]]
name = "hyperbolic_audio_generation"
required-features = ["audio"]

[[example]]
name = "mistral_embeddings"
required-features = ["derive"]

[[example]]
name = "voyageai_embeddings"
required-features = ["derive"]

[[example]]
name = "rmcp"
required-features = ["rmcp"]

[[example]]
name = "request_hook"

[[example]]
name = "discord_bot"
required-features = ["discord-bot"]

[[example]]
name = "flex_example"
required-features = ["derive"]

[[test]]
name = "embed_macro"
required-features = ["derive"]

[dependencies]
as-any = { workspace = true }
async-stream = { workspace = true }
base64 = { workspace = true }
bytes = { workspace = true }
dotenvy = { workspace = true }
epub = { workspace = true, optional = true }
eventsource-stream = "0.2.3"
futures = { workspace = true }
futures-timer = "3.0.3"
glob = { workspace = true }
http = "1.3.1"
lopdf = { workspace = true, optional = true }
mime_guess.workspace = true
ordered-float = { workspace = true }
pin-project-lite = "0.2.16"
quick-xml = { workspace = true, optional = true }
rayon = { workspace = true, optional = true }
reqwest = { workspace = true, features = ["json", "multipart", "stream"] }
rig-derive = { path = "rig-core-derive", version = "0.1.6", optional = true }
rmcp = { version = "0.6", features = ["client"], optional = true }
schemars = { workspace = true }
serde = { workspace = true, features = ["derive"] }
serde_json = { workspace = true }
serenity = { version = "0.12.4", optional = true }
thiserror = { workspace = true }
tokio = { workspace = true, features = ["rt", "sync"] }
tracing = { workspace = true }
tracing-futures = { version = "0.2.5", features = ["futures-03"] }
url = { workspace = true }
wasm-bindgen-futures = { version = "0.4.54", optional = true }
worker = { workspace = true, optional = true }

[dev-dependencies]
anyhow = { workspace = true }
assert_fs = { workspace = true }
axum = "0.8.4"
base64 = { workspace = true }
# Required for `rmcp` example
hyper-util = { version = "0.1.14", features = ["server", "service"] }
# required for otel
opentelemetry = "0.30.0"
opentelemetry-otlp = "0.30.0"
opentelemetry_sdk = { version = "0.30.0", features = ["rt-tokio"] }
rmcp = { version = "0.6", features = [
  "client",
  "macros",
  "reqwest",  # required for some strange reason
  "transport-streamable-http-client",
  "transport-streamable-http-client-reqwest",
  "transport-streamable-http-server",
  "transport-streamable-http-server-session",
  "transport-worker",
] }
serde_path_to_error = { workspace = true }
tokio = { workspace = true, features = ["full"] }
tokio-test = { workspace = true }
tracing-opentelemetry = "0.31.0"
tracing-subscriber = { workspace = true, features = ["env-filter"] }

[features]
default = ["reqwest-tls"]
all = ["derive", "pdf", "rayon"]
audio = []
derive = ["dep:rig-derive"]
discord-bot = ["dep:serenity"]
epub = ["dep:epub", "dep:quick-xml"]
experimental = []
image = []
pdf = ["dep:lopdf"]
rayon = ["dep:rayon"]
# Replace "default-tls" with "rustls-tls" in "reqwest/default"
reqwest-rustls = [
  "reqwest/charset",
  "reqwest/http2",
  "reqwest/macos-system-configuration",
  "reqwest/rustls-tls",
]
reqwest-tls = ["reqwest/default"]
rmcp = ["dep:rmcp"]
socks = ["reqwest/socks"]
worker = ["dep:wasm-bindgen-futures", "dep:worker"]
